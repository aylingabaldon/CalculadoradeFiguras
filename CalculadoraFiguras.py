import streamlit as st
import numpy as np
import matplotlib.pyplot as plt



st.title("Calculadora de Figuras Geom√©tricas üí†")
st.sidebar.write("Nombre: Ayl√≠n Yareli Gabald√≥n Y√°√±ez")
st.sidebar.write("Matr√≠cula: 313765")
tabs = st.tabs(["Figuras Geom√©tricas ‚ùÄ", "Funciones Trigonom√©tricas „Ä∞Ô∏è", "Otras Funciones üòé"])

with tabs[0]:
    st.header("Figuras Geom√©tricas ‚ùÄ")
    figura = st.selectbox(
        "Selecciona la figura:",
        ["C√≠rculo", "Tri√°ngulo", "Rect√°ngulo", "Cuadrado"]
    )
    st.write("Figura: ", figura)
    color = st.color_picker("Selecciona un color: ", "#10B4E0")

    if figura == "C√≠rculo":
        radio = st.number_input("Radio: ", min_value=0.0, value=1.0)
        area = np.pi * radio**2
        perimetro = 2 * np.pi * radio
        st.latex("F√≥rmula √Årea: œÄ * r¬≤")
        st.metric("√Årea del C√≠rculo: ", f"{area:.2f}")
        st.latex("F√≥rmula Per√≠metro: 2 * œÄ * r")
        st.metric("Per√≠metro del C√≠rculo: ", f"{perimetro:.2f}")

        fig, ax = plt.subplots()
        circulo = plt.Circle((0, 0), radio, color=color, fill=True)
        ax.add_artist(circulo)
        ax.set_aspect('equal')
        ax.set_xlim(-radio - 1, radio + 1)
        ax.set_ylim(-radio - 1, radio + 1)
        plt.title("Gr√°fica del C√≠rculo")
        st.pyplot(fig)

    elif figura == "Tri√°ngulo":
        a = st.number_input("Lado a", min_value=0.0, value=1.0)
        b = st.number_input("Lado b (base)", min_value=0.0, value=1.0)
        c = st.number_input("Lado c", min_value=0.0, value=1.0)
        h = st.number_input("Altura: ", min_value=0.0, value=1.0)
        area = 0.5 * b * h
        perimetro = a + b + c
        st.latex("F√≥rmula √Årea: (b * h) / 2")
        st.metric("√Årea del Tr√≠angulo: ", f"{area:.2f}")
        st.latex("F√≥rmula Per√≠metro: a + b + c")
        st.metric("Per√≠metro del Tri√°ngulo: ", f"{perimetro:.2f}")
        
        fig_t, ax_t = plt.subplots()
        x = [-b, b, 0]
        y = [0, 0, h]
        triangulo = plt.Polygon(list(zip(x, y)), color=color, fill=True)
        ax_t.add_patch(triangulo)
        ax_t.set_xlim(-b, b)
        ax_t.set_ylim(0, h + 2)
        ax_t.set_aspect('equal')
        ax_t.axis('on')
        plt.title("Gr√°fica del Tri√°ngulo")
        st.pyplot(fig_t)


        
    elif figura == "Rect√°ngulo":
        b = st.number_input("Base: ", min_value=0.0, value=1.0)
        h = st.number_input("Altura: ", min_value=0.0, value=1.0)
        area = b * h
        perimetro = 2 * (b + h)
        st.latex("F√≥rmula √Årea: b * h")
        st.metric("√Årea del Rect√°ngulo: ", f"{area:.2f}")
        st.latex("F√≥rmula Per√≠metro: 2 * (b + h)")
        st.metric("Per√≠metro del Rect√°ngulo: ", f"{perimetro:.2f}")
        
        fig_rec, ax_rec = plt.subplots()
        rec = plt.Rectangle((0, 0), b, h, color=color, fill=True)
        ax_rec.add_patch(rec)
        ax_rec.set_xlim(-1, b + 1)
        ax_rec.set_ylim(-1, h + 1)
        ax_rec.set_aspect('equal')
        ax_rec.axis('on')
        plt.title("Gr√°fica del Rect√°ngulo")
        st.pyplot(fig_rec)

    elif figura == "Cuadrado":
        l = st.number_input("Lado: ", min_value=0.0, value=1.0)
        area = l**2
        perimetro = 4 * l
        st.latex("F√≥rmula √Årea: L * L")
        st.metric("√Årea del Cuadrado: ", f"{area:.2f}")
        st.latex("F√≥rmula Per√≠metro: 4 * L")
        st.metric("Per√≠metro del Cuadrado: ", f"{perimetro:.2f}")

        fig_cuadro, ax_cuadro = plt.subplots()
        cuadrado = plt.Rectangle((0, 0), l, l, color=color, fill=True)
        ax_cuadro.add_patch(cuadrado)
        ax_cuadro.set_xlim(-1, l + 1)
        ax_cuadro.set_ylim(-1, l + 1)
        ax_cuadro.set_aspect('equal')
        ax_cuadro.axis('on')
        plt.title("Gr√°fica del Cuadrado")
        st.pyplot(fig_cuadro)

with tabs[1]:
    st.header("Funciones Trigonom√©tricas „Ä∞Ô∏è")
    funcion = st.selectbox("Selecciona la funci√≥n:", ["Seno", "Coseno", "Tangente"])
    frecuencia = st.slider("Frecuencia", 0.1, 15.0, 1.0)
    amplitud = st.slider("Amplitud", 0.1, 15.0, 1.0)
    x = np.linspace(0, 15, 600)

    if funcion == "Seno":
        y = amplitud * np.sin(frecuencia * x)
    elif funcion == "Coseno":
        y = amplitud * np.cos(frecuencia * x)
    elif funcion == "Tangente":
        y = amplitud * np.tan(frecuencia * x)
        y[np.abs(y) > 10] = np.nan
    
    fig_funTri, ax_funTri = plt.subplots()
    ax_funTri.plot(x, y, color=color)
    ax_funTri.set_title(f"Gr√°fica de la funci√≥n: {funcion}")
    ax_funTri.grid(True)
    plt.xlabel("x")
    plt.ylabel("y")
    plt.legend()
    st.pyplot(fig_funTri)   
    
with tabs[2]:
    st.header("Otras Funciones üòé")
    funciones = st.selectbox("Selecciona la funci√≥n:", ["F√≥rmula General", "Funci√≥n Gaussiana"])
    
if funciones == "F√≥rmula General":
    a = st.number_input("Variable a", min_value=0.0, value=1.0)
    b = st.number_input("Variable b", min_value=0.0, value=1.0)
    c = st.number_input("Variable c", min_value=0.0, value=1.0)
    x1 = ((-b)+(((b**2)-(4*a*c))**(1/2)))/(2*a)
    X2 = ((-b)-(((b**2)-(4*a*c))**(1/2)))/(2*a)
    st.latex("F√≥rmula General: ", ![](https://economipedia.com/wp-content/uploads/ecuacion-de-segundo-grado_solucion.png)
             



